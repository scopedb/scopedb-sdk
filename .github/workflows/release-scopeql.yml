# Copyright 2024 ScopeDB, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Release ScopeQL

on:
  push:
    tags: [ 'scopeql/v[0-9]+.[0-9]+.[0-9]+*' ]
  pull_request:
    # Manually trigger the workflow for pull requests: 0 (EDIT TO TRIGGER)
    paths: [ '.github/workflows/release-scopeql.yml' ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.event.number || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  precondition:
    if: ${{ github.repository == 'scopedb/scopedb-sdk' }}
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - run: ./scopeql/scripts/check-version-tag-match.sh

  build-and-push-amd64:
    needs: [ precondition ]
    if: ${{ github.repository == 'scopedb/scopedb-sdk' }}
    runs-on: ubuntu-24.04-arm
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Run Docker sanity check
        uses: ./.github/actions/docker-sanity-check
        with:
          tag: scopeql:ci
          file: scopeql.dockerfile
      - name: Build and push by digest
        if: ${{ github.event_name != 'pull_request' }}
        uses: ./.github/actions/docker-push-by-digest
        id: build
        with:
          registry: ghcr.io
          name: ghcr.io/scopedb/scopeql
          file: scopeql.dockerfile
          username: ${{ secrets.CI_GITHUB_ACTOR }}
          password: ${{ secrets.CI_GITHUB_TOKEN }}
    outputs:
      digest: ${{ steps.build.outputs.digest }}

  build-and-push-arm64:
    needs: [ precondition ]
    if: ${{ github.repository == 'scopedb/scopedb-sdk' }}
    runs-on: ubuntu-24.04-arm
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Run Docker sanity check
        uses: ./.github/actions/docker-sanity-check
        with:
          tag: scopeql:ci
          file: scopeql.dockerfile
      - name: Build and push by digest
        if: ${{ github.event_name != 'pull_request' }}
        uses: ./.github/actions/docker-push-by-digest
        id: build
        with:
          registry: ghcr.io
          name: ghcr.io/scopedb/scopeql
          file: scopeql.dockerfile
          username: ${{ secrets.CI_GITHUB_ACTOR }}
          password: ${{ secrets.CI_GITHUB_TOKEN }}
    outputs:
      digest: ${{ steps.build.outputs.digest }}

  docker-meta:
    if: ${{ github.repository == 'scopedb/scopedb-sdk' && github.event_name != 'pull_request' }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    needs:
      - build-and-push-amd64
      - build-and-push-arm64
    steps:
      - uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: scopeql
          sep-tags: ' '
          tags: |
            type=semver,pattern=v{{version}}
            type=edge,branch=main
            type=raw,value={{date 'YYYYMMDD-HHmmss'}}
    outputs:
      tags: ${{ steps.meta.outputs.tags }}

  release-ghcr:
    if: ${{ github.repository == 'scopedb/scopedb-sdk' && github.event_name != 'pull_request' }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    needs:
      - build-and-push-amd64
      - build-and-push-arm64
      - docker-meta
    steps:
      - uses: actions/checkout@v4
      - name: Release to GitHub Container Registry
        uses: ./.github/actions/docker-release
        with:
          tags: ${{ needs.docker-meta.outputs.tags }}
          registry: ghcr.io
          organization: ghcr.io/scopedb
          username: ${{ secrets.CI_GITHUB_ACTOR }}
          password: ${{ secrets.CI_GITHUB_TOKEN }}
          digests: >
            ghcr.io/scopedb/scopeql@${{ needs.build-and-push-amd64.outputs.digest }}
            ghcr.io/scopedb/scopeql@${{ needs.build-and-push-arm64.outputs.digest }}

  release-dockerhub:
    if: ${{ github.repository == 'scopedb/scopedb-sdk' && github.event_name != 'pull_request' }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    needs:
      - build-and-push-amd64
      - build-and-push-arm64
      - docker-meta
    steps:
      - uses: actions/checkout@v4
      # Login to ghcr.io for copy images
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.CI_GITHUB_ACTOR }}
          password: ${{ secrets.CI_GITHUB_TOKEN }}
      - name: Release to Docker Hub
        uses: ./.github/actions/docker-release
        with:
          tags: ${{ needs.docker-meta.outputs.tags }}
          registry: docker.io
          organization: scopedb
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          digests: >
            ghcr.io/scopedb/scopeql@${{ needs.build-and-push-amd64.outputs.digest }}
            ghcr.io/scopedb/scopeql@${{ needs.build-and-push-arm64.outputs.digest }}

  release-sweet-pubrepo:
    if: ${{ github.repository == 'scopedb/scopedb-sdk' && github.event_name != 'pull_request' }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    needs:
      - build-and-push-amd64
      - build-and-push-arm64
      - docker-meta
    steps:
      - uses: actions/checkout@v4
      # Login to ghcr.io for copy images
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.CI_GITHUB_ACTOR }}
          password: ${{ secrets.CI_GITHUB_TOKEN }}
      - name: Release to Sweet Pubrepo
        uses: ./.github/actions/docker-release
        with:
          tags: ${{ needs.docker-meta.outputs.tags }}
          registry: pubrepo.jiagouyun.com
          organization: pubrepo.jiagouyun.com/scopedb
          username: ${{ secrets.JIAGOUYUN_USERNAME }}
          password: ${{ secrets.JIAGOUYUN_TOKEN }}
          digests: >
            ghcr.io/scopedb/scopeql@${{ needs.build-and-push-amd64.outputs.digest }}
            ghcr.io/scopedb/scopeql@${{ needs.build-and-push-arm64.outputs.digest }}
