name: CI (Go SDK)
on:
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '4 2 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.event.number || github.run_id }}
  cancel-in-progress: true

jobs:
  check:
    name: Check
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60

  test:
    name: Build and test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Build
        run: go build ./...
      - name: Start ScopeDB Environment
        run: docker compose -f dev/docker-compose.yml up -d
      - name: Run tests
        run: go test -v ./...
        env:
          SCOPEDB_ENDPOINT: http://localhost:6543

  required:
    name: Required
    runs-on: ubuntu-22.04
    if: ${{ always() }}
    needs:
      - check
      - test
    steps:
      - name: Guardian
        run: |
          if [[ ! ( \
                 "${{ needs.check.result }}" == "success" \
              && "${{ needs.test.result }}" == "success" \
              ) ]]; then
            echo "Required jobs haven't been completed successfully."
            exit -1
          fi
